<!--
import "../View/HeaderView.tag"
import "../View/FooterView.tag"
import "../View/BannerView.tag"
import "../View/ArticleTabView.tag"
import "../View/ArticlesTableView.tag"
import "../View/TagsView.tag"
import "../View/PagenationView.tag"
-->

<articles>

<script>
    
// import ArticlesUseCase from "../../Domain/UseCase/ArticlesUseCase"

// var self = this
// var useCase = new ArticlesUseCase()

// this.on("mount", () => {

//     // setup header
//     self.tags.header_view.setItems( useCase.menuItems() )

//     // request articles
//     useCase.requestArticles().then( (container) => {
//         self.tags.articles_table_view.setArticles( container.articles )

//         // setup pagenation
//         self.tags.pagenation_view.shownPage = useCase.currentPage()
//         self.tags.pagenation_view.setCountOfPage( useCase.pageCount() )
//     })
//     // request tagList
//     useCase.requestTags().then( (tags) => {
//         self.tags.tags_view.setTagWords( tags ) // note: riot.tags are undefined from the promise function
//         self.tags.tags_view.update()
//     })

//     // setup article tab
//     self.tags.article_tab_view.setItems( useCase.tabItems() )

//     // setup view action handler
//     self.tags.pagenation_view.didSelectPageNumber = (page) => {
//         useCase.jumpPage(page)
//     }
//     self.tags.article_tab_view.didSelectTab = (item) => {
//         useCase.jumpToSubPath(item.identifier)
//     }
//     self.tags.articles_table_view.didSelectArticle = (article) => {
//         useCase.jumpToArticleScene(article)
//     }
//     self.tags.articles_table_view.didSelectProfile = (profile) => {
//         useCase.jumpToProfileScene (profile)
//     }

//     // From here only logged-in
//     if ( useCase.isLoggedIn() == false ){ return }

//     self.tags.articles_table_view.didFavorite = (article) => {
//         useCase.toggleFavorite(article).then( articles => {
//             if ( articles === null ) return
//             self.tags.articles_table_view.setArticles( articles )
//         }) 
//     }
// })

// self.isLoggedIn = () => {
//     return useCase.isLoggedIn()
// }
import { register, component } from "riot"
import ArticlesViewController from "./ArticlesViewController"

import HeaderView from "../../Presentation/View/HeaderView.riot"
import FooterView from "../../Presentation/View/FooterView.riot"
import BannerView from "../../Presentation/View/BannerView.riot"
import ArticleTabView from "../../Presentation/View/ArticleTabView.riot"
import ArticlesTableView from "../../Presentation/View/ArticlesTableView.riot"

export default{
    onBeforeMount() {
        // set owner
        let vc = new ArticlesViewController()
        this.owner = vc

        // linking outlet
        vc.view = this

        // Call lifecycle
        vc.viewWillAppear()
    },
    onMounted(){
        // Mount components
        let headerView = component(HeaderView)( this.$("div#header_view") )
        component(FooterView)( this.$("div#footer_view") ) // unuse
        if ( this.owner.isLoggedIn() == false ){
            component(BannerView)( this.$("div#banner_view") ) // unuse
        }
        let articleTabView = component(ArticleTabView)( this.$("div#article_tab_View"), {
             toggle_style: "feed-toggle",
             didSelectTab: this.owner.didSelectTab
        })
        let articlesTableView = component(ArticlesTableView)( this.$("div#articles_table_view"), {
            didSelectProfile: this.owner.didSelectProfile,
            didSelectArticle: this.owner.didSelectArticle,
            didFavoriteArticle: this.owner.didFavoriteArticle
        })

        // linking outlet
        this.owner.headerView = headerView
        this.owner.articleTabView = articleTabView
        this.owner.articlesTableView = articlesTableView

        // Call lifecycle
        this.owner.viewDidAppear()
    },
    onBeforeUnmount(){ this.owner.viewWillAppear() },
    onUnmount(){ this.owner.viewDidAppear() }
}

</script>


<div class="home-page">

    <div id="header_view"/>
    <div id="banner_view"/>

    
    <div class="container page">
        <div class="row">
            <div class="col-md-9">
                <div id="article_tab_View" />
                <div id="articles_table_view" />
                <!--
                <pagenation_view />
                -->
            </div>
            <div class="col-md-3">
                <!--
                <tags_view/>
                -->
            </div>
        </div>
    </div>
    <div id="footer_view"/>
</div>

</articles>